@import "variables";
@import "mixins";
@import "animations";
@import "images";

* {
    box-sizing: border-box;
}

ul {
    list-style-type: none;
}

a {
    text-decoration: none;
}

input, textarea, select{
    background-color: white;
    outline: none;
}


body {
    color: $body-font-colour;
    text-align: center;
    background-color: $main-body-colour;
    font-family: $body-font;
    
}

.nav ul{
    @include flexbox($justify: flex-start); // default parameters are display: flex, direction: row, wrap: wrap, justify: center, align: center
}

.nav ul li{
    @include size($width:42%);
    // border-bottom: 1px solid $intro-p-colour;
    border-left: 1px solid $intro-p-colour;
    padding: 5px 0;
}

.nav ul li a{
    color: $intro-p-colour;
    font-size: 1.4em;
    padding: 0 5px;
    
}

.header-intro {
    background-color: $header-background-colour;
    @include flexbox(); // default parameters are display: flex, direction: row, wrap: wrap, justify: center, align: center
    @include size($height: 100vh); // 2 parameters, first is the width which is default to 100%, second is height
    margin-bottom: 0;
}

h1 {
    margin: 0;
}


span {
    @include flexbox(); // default parameters are display: flex, direction: row, wrap: wrap, justify: center, align: center
    color: $intro-heading-font-colour;
    font-family: $intro-font;
    text-shadow: 0 0 0 $smoke-shadow;
   animation: smoky 2s 1s both;    
}
 
// animate every second span item with the smoky-mirror animation
  span:nth-child(even){
    animation-name: smoky-mirror;
  }
  
  


h1 {
    @include flexbox(); // default parameters are display: flex, direction: row, wrap: wrap, justify: center, align: center
    @include size(); // 2 parameters, first is the width which is default to 100%, second is height and default is auto
    font-size: 6rem;
}


  

header p {
    color: $header-background-colour;
    font-size: 1.4em;
    animation-name: introP;
    animation-duration: 4s;
    animation-delay: 4s;
    animation-timing-function: ease-in-out;
    animation-fill-mode: forwards;
    width: 100%;
}

// The container that holds the down arrow
.scroll-container {
    @include size($width:200px, $height: 200px); // 2 parameters, first is the width which is default to 100%, second is height and default is auto
    position: relative;
    margin: 20px;
}

.downArrow {
    @include size($width:200px, $height: 200px); // 2 parameters, first is the width which is default to 100%, second is height and default is auto         
    position: absolute;
    top: 0;
    left: 0;
    opacity: 1;  /* for demo purpose  */
}



// This covers the down arrow, but slowly displays it
.coverArrow {
    background-color: $header-background-colour;
    z-index: 9;
    animation-name: showArrow;
    animation-duration: 5s;
}


// The down arrow on the initial screen
.down-btn-scroll {
    @include size($width:49px, $height: 49px); // 2 parameters, first is the width which is default to 100%, second is height and default is auto  
    @include borderRadius($radius:50%); // only 1 argument which is set to 5px by default
    position: absolute;
    bottom: 25%;
    top: 0;
    left: 0;
    right: 0;
    display: 'inline-block';
    opacity: 1;    
    margin: auto;
    padding-top: 50px;
    z-index: 9;    
    -webkit-transition: background-color 4s ease-in-out;
    transition: background-color 4s ease-in-out;
    animation-name: arrowPulse;
    animation-duration: 2s;
    animation-delay: 5s;
    animation-iteration-count: infinite;
}


// setup grid container
.grid-container {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    grid-row-gap: 10px;
}

section {
    border-top: 1px solid #7f8378;
}

// the project cards
.card {
    @include flexbox(); // default parameters are display: flex, direction: row, wrap: wrap, justify: center, align: center
    @include borderRadius(); // only 1 argument which is set to 5px by default
    font-size: 1.4em;
    margin: 20px 10px;
    position: relative;
    perspective: 1000px; /* Remove this if you don't want the 3D effect */
    height: 100%;  
    
    cursor: pointer;
}

.card p {
    font-size: 1rem;
}

.card .button {
    margin-bottom: 20px;
}

h2 {
    font-size: 1.6em;
    color: $second-font-colour;
}

h3 {
    color: $heading-font-colour;
}

.card h2 {
  @include size();
}

.button {
    @include defaultButton;
}

  /* This container is needed to position the front and back side */
.card-inner {
    @include flexbox(); // default parameters are display: flex, direction: row, wrap: wrap, justify: center, align: center
    @include size($height: 100%); // 2 parameters, first is the width which is default to 100%, second is height and default is auto   
    @include borderRadius(); // only 1 argument which is set to 5px by default
    box-shadow: 0 5px 18px rgba(0, 0, 0, 0.6);
    margin-top: 20px;
    text-align: center;
    -webkit-transition: transform 0.6s;
    transform-style: preserve-3d;
    transition: 0.5s;
    -webkit-transition: 0.5s;
    position: relative;
    transition: transform 0.6s;
    -webkit-transition: transform 0.6s; 
}
  

  /* Position the front and back side */
.card-front, .card-back {
    @include size($height:100%); // 2 parameters, first is the width which is default to 100%, second is height and default is auto   
    @include borderRadius(); // only 1 argument which is set to 5px by default
    -webkit-backface-visibility: hidden; /* Safari */
    backface-visibility: hidden;
}
  
  /* Style the front side (fallback if image is missing) */
.card-front {
    @include flexbox(); // default parameters are display: flex, direction: row, wrap: wrap, justify: center, align: center
    background-color: $card-background-colour;
    height: 100%;
    transform: rotateX(0deg);
    -webkit-transform: rotateX(0deg);
     color: white;
}


  
.card-inner.flip {
    @include flexbox();// default parameters are display: flex, direction: row, wrap: wrap, justify: center, align: center
    @include size($height:100%); // 2 parameters, first is the width which is default to 100%, second is height and default is auto   
    transform: rotateY(180deg);
    -webkit-transform: rotateY(180deg); 
}
  
  /* Style the back side of the card */
.card-back {
    @include flexbox(); // default parameters are display: flex, direction: row, wrap: wrap, justify: center, align: center
    @include size($height:100%); // 2 parameters, first is the width which is default to 100%, second is height and default is auto 
    transform: rotateY(180deg);
    -webkit-transform: rotateY(180deg);
    position: absolute;
    text-align: center;
    right: 0;
    left: 0;
    top: 0;
    background-color: #252A34; 
 }

.card-image {
    @include flexbox(); // default parameters are display: flex, direction: row, wrap: wrap, justify: center, align: center
    @include size($height:80%); // 2 parameters, first is the width which is default to 100%, second is height and default is auto 
    padding-top: 20px;
  }

.front-card-text {
    @include flexbox($align: flex-start); // default parameters are display: flex, direction: row, wrap: wrap, justify: center, align: center
    @include size($height:20%); // 2 parameters, first is the width which is default to 100%, second is height and default is auto 
}
 
.card-buttons {
    @include flexbox(); // default parameters are display: flex, direction: row, wrap: nowrap, justify: center, align: center
    @include size($height:20%); // 2 parameters, first is the width which is default to 100%, second is height and default is auto 
}

.card-buttons a {
    @include size($width: 40%); // 2 parameters, first is the width which is default to 100%, second is height and default is auto 
}

.about-me {
    @include flexbox(); // default parameters are display: flex, direction: row, wrap: nowrap, justify: center, align: center
    
}

.about-me-container {
    @include flexbox(); // default parameters are display: flex, direction: row, wrap: nowrap, justify: center, align: center
    @include size($width:90%) // 2 parameters, first is the width which is default to 100%, second is height and default is auto 
    color:$second-font-colour;
}
